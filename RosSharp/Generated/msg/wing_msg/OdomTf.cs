//----------------------------------------------------------------
// <auto-generated>
//     This code was generated by the GenMsg. Version: 0.1.0.0
//     Don't change it manually.
//     2021-01-26T11:01:56+08:00
// </auto-generated>
//----------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using RosSharp.Message;
using RosSharp.Service;
using RosSharp.std_msgs;
namespace RosSharp.wing_msg
{
    ///<exclude/>
    public class OdomTf : IMessage
    {
        ///<exclude/>
        public OdomTf()
        {
        }
        ///<exclude/>
        public OdomTf(BinaryReader br)
        {
            Deserialize(br);
        }
        ///<exclude/>
        public float dx { get; set; }
        ///<exclude/>
        public float dy { get; set; }
        ///<exclude/>
        public float dth { get; set; }
        ///<exclude/>
        public string MessageType
        {
            get { return "wing_msg/OdomTf"; }
        }
        ///<exclude/>
        public string Md5Sum
        {
            get { return "28f3b1073c795c8d685b14442e616df2"; }
        }
        ///<exclude/>
        public string MessageDefinition
        {
            get { return "float32 dx\nfloat32 dy\nfloat32 dth"; }
        }
        ///<exclude/>
        public bool HasHeader
        {
            get { return false; }
        }
        ///<exclude/>
        public void Serialize(BinaryWriter bw)
        {
            bw.Write(dx);
            bw.Write(dy);
            bw.Write(dth);
        }
        ///<exclude/>
        public void Deserialize(BinaryReader br)
        {
            dx = br.ReadSingle();
            dy = br.ReadSingle();
            dth = br.ReadSingle();
        }
        ///<exclude/>
        public int SerializeLength
        {
            get { return 4 + 4 + 4; }
        }
        ///<exclude/>
        public bool Equals(OdomTf other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;
            return other.dx.Equals(dx) && other.dy.Equals(dy) && other.dth.Equals(dth);
        }
        ///<exclude/>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != typeof(OdomTf)) return false;
            return Equals((OdomTf)obj);
        }
        ///<exclude/>
        public override int GetHashCode()
        {
            unchecked
            {
                int result = 0;
                result = (result * 397) ^ dx.GetHashCode();
                result = (result * 397) ^ dy.GetHashCode();
                result = (result * 397) ^ dth.GetHashCode();
                return result;
            }
        }
    }
}
